# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
#  Scientifica:monospace 8
font pango:Fira Code 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# Keyboard layouts
exec --no-startup-id setxkbmap -layout us,pl,nl -option 'grp:win_space_toggle'

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $HOME/.config/scripts/lock-screen.sh --nofork
# timeout out lock
exec --no-startup-id xautolock -time 5 -locker $HOME/.config/scripts/lock-screen.sh

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# screen management
bindsym $mod+$alt+s exec --no-startup-id autorandr horizontal
exec_always --no-startup-id autorandr horizontal

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+t exec i3-sensible-terminal

bindsym $mod+l exec "$HOME/.config/scripts/lock-screen.sh"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id "rofi -modi drun,run -show drun"
bindsym $mod+d exec --no-startup-id "rofi -modi run,drun,window -show drun -config ~/.config/rofi-bak/config.rasi -theme /home/entio/.config/rofi/launchers/type-4/style-5.rasi"
bindsym $mod+Shift+d exec --no-startup-id "rofi -modi window,run -show window -config ~/.config/rofi-bak/config.rasi -theme /home/entio/.config/rofi/launchers/type-4/style-5.rasi"
bindsym $mod+$alt+Shift+d exec --no-startup-id "rofi -show drun -run-command 'sudo {cmd}'"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move worskpaces across displays
bindsym $mod+bracketright move workspace to output right
bindsym $mod+bracketleft move workspace to output left

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        # bindsym j resize shrink width 5 px or 5 ppt
        # bindsym k resize grow height 5 px or 5 ppt
        # bindsym l resize shrink height 5 px or 5 ppt
        # bindsym semicolon resize grow width 5 px or 5 ppt
		bindsym j resize shrink width 10 px
		bindsym k resize grow height 10 px
		bindsym l resize shrink height 10 px
		bindsym semicolon resize grow width 10 px

        # same bindings, but for the arrow keys
        # bindsym Left resize shrink width 5 px or 5 ppt
        # bindsym Down resize grow height 5 px or 5 ppt
        # bindsym Up resize shrink height 5 px or 5 ppt
        # bindsym Right resize grow width 5 px or 5 ppt
		bindsym Left resize shrink width 10 px
		bindsym Down resize grow height 10 px
		bindsym Up resize shrink height 10 px
		bindsym Right resize grow width 10 px
		
		bindsym Shift+Left resize shrink width 50 px
		bindsym Shift+Down resize grow height 50 px
		bindsym Shift+Up resize shrink height 50 px
		bindsym Shift+Right resize grow width 50 px

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default", exec killall i3-nagbar
        bindsym Escape mode "default", exec killall i3-nagbar
        bindsym $mod+r mode "default", exec killall i3-nagbar
}

bindsym $mod+r mode "resize", exec i3-nagbar -m 'Resizing mode activated' -t warning

# disable mouse focus
focus_follows_mouse no

#
# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

### PROGRAM SHORTCUTS
# Make printscreen
# bindsym Print --release exec "scrot -s /tmp/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"
bindsym Print --release exec "scrot -s -f /tmp/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"

### AUTOSTART
# tray internet connection applet
exec_always --no-startup-id nm-applet


# exec_always --no-startup-id "python3 $HOME/.config/scripts/autorename_workspaces.py &"
exec_always --no-startup-id python3 $HOME/.config/scripts/autorename-workspaces.py --norenumber_workspaces

exec_always --no-startup-id echo 100000 > /sys/class/backlight/intel_backlight/brightness

# wallpaper
exec_always --no-startup-id "feh --randomize --bg-fill ~/wallpaper/*"

# title bar
for_window [class=".*"] title_window_icon yes
for_window [class=".*"] border pixel 0
for_window [class="Yad" title="yad-calendar"] floating enable

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#######################
### I3BAR


exec_always --no-startup-id "sh $HOME/.config/polybar/launch.sh"
exec_always --no-startup-id "sh $HOME/.config/dunst/launch.sh"
exec_always --no-startup-id "/usr/bin/copyq"

# orange = #ff7f00
# orange-slightly-darker = #c26100
# orange-slightly-darker-and-more-yellowish = #c28000

# Theme colors
# class         		border	backgr.	text	indic.	child_border
client.focused			#282A2E	#c28000	#0c0600
client.focused_inactive #0c0600 #0c0600 #ff7f00
client.unfocused		#282A2E #0c0600 #ff7f00

client.focused          #556064 #556064 #ff7f00 #FDF6E3
client.focused_inactive #2F3D44 #0c0600 #ff7f00 #454948
client.unfocused        #2F3D44 #0c0600 #ff7f00 #454948
client.urgent           #CB4B16 #FDF6E3 #ff7f00 #a76f30
client.placeholder      #000000 #0c0c0c #ffffff #000000

# gaps inner 14
# gaps outer -2
# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on



font pango:Hasklug Nerd Font 5
font pango:Hasklug Nerd Font 12
font xft:URWGothic-Book 12E
client.background #061016


#######################
# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal
