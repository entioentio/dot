- defaults:
    link:
      relink: true

- clean: ['~']

- when:
  - "test -x /usr/bin/apt":
    - packages: [zsh, fzf, network-manager, networkmanager, autorandr, copyq, dunst, polybar]
      command: "sudo apt install -y"
  - "test -x /usr/bin/pacman":
    - packages: [zsh, fzf, network-manager, networkmanager, autorandr, copyq, dunst, polybar]
      command: "sudo pacman -S --noconfirm"

- create:
  - ~/Projects
  - ~/.config/Code/User
  - ~/.config/copyq
  - ~/.config/dunst
  - ~/.config/i3
  - ~/.config/polybar

- link:
    ~/.config/aliases: aliases
    ~/.config/functions: functions
    ~/.config/scripts: scripts

    ~/.zshrc: zshrc
    ~/.zsh-z.plugin.zsh: zsh-z.plugin.zsh
    ~/.config/mimeapps.list: mimeapps.list
    ~/.config/monitors.xml: monitors.xml
    ~/.config/pavucontrol.ini: pavucontrol.ini

    # VSCode
    ~/.config/Code/User/settings.json: code/settings.json
    ~/.config/Code/User/keybindings.json: code/keybindings.json

    ~/.config/copyq/copyq.conf: copyq/copyq.conf
    
    # Dunst
    ~/.config/dunst/dunstrc: dunst/dunstrc
    ~/.config/dunst/launch.sh: dunst/launch.sh
      
    # i3
    ~/.config/i3/config: i3/config

    # Polybar
    ~/.config/polybar/config.ini: polybar/config.ini
    ~/.config/polybar/launch.sh: polybar/launch.sh

    # Rofi
    ~/.config/rofi: rofi

- shell:
  - [git submodule update --init --recursive, Installing submodules]
  - [sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)", Installing oh-my-zsh]
  - 
    command: '[[ $(grep Microsoft /proc/version) ]] || (! [[ $SHELL =~ "zsh" ]] && chsh -s $(which zsh)) || true '
    stdin: true
    stdout: true
    stderr: true
    description: Change shell to zsh if not already (do not check on WSL as it does not work)
    quiet: false